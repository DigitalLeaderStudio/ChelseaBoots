@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;

@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }
}

<div class="page category-page">
    <div class="panel panel-default form-panel">
        <div class="panel-heading">
            <h3>@Model.Name</h3>
        </div>
        <div class="panel-body">
            <div class="page-body">
				@Html.Widget("categorydetails_top")
				@*description*@
				@if (!String.IsNullOrWhiteSpace(Model.Description))
				{
					<div class="category-description">
						@Html.Raw(Model.Description)
					</div>
				}
				@Html.Widget("categorydetails_before_subcategories")
				@*subcategories*@
				@if (Model.SubCategories.Count > 0)
				{
					<div class="row">                
						@foreach (var item in Model.SubCategories)
						{
							<div class="col-md-3">
								<div class="item-box">
									<div class="offer offer-default pull-text-center">
										<div class="category-ash-box">
											<h2 class="product-title">
												<a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
													@item.Name</a>
											</h2>
										</div>
										<div class="picture">
											<a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
												<img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl"
													 title="@item.PictureModel.Title" /></a>
										</div>
									</div>
								</div>
							</div>
						}
					</div>
				}
				@Html.Widget("categorydetails_before_featured_products")
				@*featured products*@
				@if (Model.FeaturedProducts.Count > 0)
				{
					<div class="product-grid home-page-product-grid">
						<div class="title mid-content-title">
							<strong>@T("Products.FeaturedProducts")</strong>
							<span class="pull-right">
								<a class="title-carousel-control" href="#carousel-example-generic-homepage-product" data-slide="prev">
									<i class="fa fa-angle-left"></i>
								</a>
								<a class="title-carousel-control" href="#carousel-example-generic-homepage-product" data-slide="next">
									<i class="fa fa-angle-right"></i>
								</a>
							</span>
						</div>

						<div id="carousel-example-generic-homepage-product" class="carousel slide" data-ride="carousel">
							<!-- Indicators -->
							<!-- Wrapper for slides -->
							<div class="carousel-inner">
								@{
									var ci = 0;
								} 
								@foreach (var item in Model.FeaturedProducts)
								{
									if(ci==0)
									{
										@:<div class="item active">
										@:<div class="row box-products" >
									}
									else if(ci%2==0){
										@:<div class="item">
										@:<div class="row box-products" >
									}
                    
									<div class="col-md-6">
										<div class="offer offer-default silde-show-offer pull-text-center">
											@Html.Partial("_ProductBox", item)
										</div>
									</div>                    

									if(ci%2==1){
										@:</div>
										@:</div>
									}
									ci++;
								}
								@if(ci%2==1){
									@:</div>
									@:</div>
								}
        
							</div>
						</div>
					</div>
				}
				@Html.Widget("categorydetails_after_featured_products")
                <div class="row">
                    <div class="col-md-12">						
							<div class="product-selectors clearfix">
								
								<div class="col">
									@*sorting*@
									@if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0)
									{
										<div class="btn-group pull-left">
											<button type="button" class="btn btn-default">@T("Catalog.OrderBy")</button>
											<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
												<span class="caret"></span>
												<span class="sr-only">Toggle Dropdown</span>
											</button>
											<ul class="dropdown-menu">
												@foreach (var sortOption in Model.PagingFilteringContext.AvailableSortOptions)
											{
											<li>
												<a href="@sortOption.Value">
													@if (sortOption.Selected)
														{
														<i class="fa fa-check"></i>
														}
													@sortOption.Text
												</a>
											</li>
											}
											</ul>
										</div>
									}
								</div>
								<div class="col">
									@*view mode*@
									@if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
									{
										var gridLink = Model.PagingFilteringContext.AvailableViewModes.Where(mode => mode.Value.Contains("viewmode=grid")).First().Value;
										var listLink = Model.PagingFilteringContext.AvailableViewModes.Where(mode => mode.Value.Contains("viewmode=list")).First().Value;

										<div class="btn-group pull-right margin-left-5">
											<a class="btn btn-default @(Model.PagingFilteringContext.ViewMode == "grid" ? "active" : "")" href="@gridLink">
												<i class="fa fa-th" aria-hidden="true"></i>
											</a>
											<a class="btn btn-default @(Model.PagingFilteringContext.ViewMode == "list" ? "active" : "")" href="@listLink">
												<i class="fa fa-list" aria-hidden="true"></i>
											</a>
										</div>
									}
									@*page size*@
									@if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0)
									{
										<div class="btn-group pull-right">
											<button type="button" class="btn btn-default">@T("Catalog.PageSize")</button>
											<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
												<span class="caret"></span>
												<span class="sr-only">Toggle Dropdown</span>
											</button>
											<ul class="dropdown-menu">
												@foreach (var sortOption in Model.PagingFilteringContext.PageSizeOptions)
												{
													<li>
														<a href="@sortOption.Value">
															@if (sortOption.Selected)
															{
																<i class="fa fa-check"></i>
															}
															@sortOption.Text
														</a>
													</li>
												}
											</ul>
										</div>
									}
								</div>
						</div>
                    </div>                    
                </div>

                @Html.Widget("categorydetails_before_filters")
				@section left
				{
					<div class="product-filters-wrapper">
						@*filtering*@
						@if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
						{
							@Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
						}
						@*filtering*@
						@if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
						{
							@Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
						}
					</div>
				}
				@Html.Widget("categorydetails_before_product_list")
				@*product list*@
				@if (Model.Products.Count > 0)
				{
					if (Model.PagingFilteringContext.ViewMode == "list")
					{
						@*list mode*@
						<div class="product-list">                    
							@foreach (var product in Model.Products)
							{
								<div class="row">
									<div class="col-md-12">
										<div class="offer offer-default">
											@Html.Partial("_ProductBox", product)
										</div>
									</div>
								</div>
							}
						</div>       
					}
					else
					{
						@*grid mode*@
						<div class="product-grid home-page-product-grid">
							@{
								var pg_i = 0;
							}
							@foreach (var product in Model.Products)
							{
								if(pg_i%3==0)
								{
									@:<div class="row box-products">
								}
								<div class="col-md-4">
									<div class="offer offer-default silde-show-offer pull-text-center">
										@Html.Partial("_ProductBox", product)
									</div>
								</div>
								if(pg_i%3==2)
								{
									@:</div>
								}
								pg_i++;
							}
							@if(pg_i%3!=0)
							{
								@:</div>
					}
						</div>
					}
				}
				<div class="pager">
					@Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
				</div>
				@Html.Widget("categorydetails_bottom")
    </div>
	</div>
</div>
