@model Nop.Web.Models.Catalog.CatalogPagingFilteringModel
@{
	int currentManufacturerId = 0;
	if (Url.RequestContext.RouteData.Values["controller"].ToString().Equals("catalog", StringComparison.InvariantCultureIgnoreCase) &&
		Url.RequestContext.RouteData.Values["action"].ToString().Equals("manufacturer", StringComparison.InvariantCultureIgnoreCase))
	{
		currentManufacturerId = Convert.ToInt32(Url.RequestContext.RouteData.Values["manufacturerId"].ToString());
	}

	var breadcrumbDelimiter = Nop.Core.Infrastructure.EngineContext.Current.Resolve<Nop.Core.Domain.Common.CommonSettings>().BreadcrumbDelimiter;
}

<div class="product-filters-wrapper">
	@*filtering*@
	@if (Model.PriceRangeFilter.Enabled)
	{
		@Html.Partial("_FilterPriceBox", Model.PriceRangeFilter, new ViewDataDictionary())
	}
	@*filtering*@
	@if (Model.SpecificationFilter.Enabled)
	{
		@Html.Partial("_FilterSpecsBox", Model.SpecificationFilter, new ViewDataDictionary())
	}
</div>
@Html.Action("ManufacturerNavigation", "Catalog", new { currentManufacturerId = currentManufacturerId })
@Html.Widget("left_side_column_after")
@Html.Action("VendorNavigation", "Catalog")