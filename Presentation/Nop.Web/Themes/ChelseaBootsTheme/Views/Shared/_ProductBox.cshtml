@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Extensions
@using Nop.Web.Models.Catalog;
@using Nop.Web.Themes.ChelseaBootsTheme.Models;

@helper Text_Truncate(string input, int length)
{
	if (input.Length <= length)
	{
		@input
	}
	else
	{
		@input.Substring(0, length)<text>...</text>
	}
}

@helper Price_Modifier(string input, int length)
{
	if (input.Length <= length)
	{
		@Html.Raw(@input)
	}
	else
	{
		@Html.Raw(@input.Substring(0, length))<text>...</text>
	}
}

@{
	Html.AppendScriptParts("~/Themes/ChelseaBootsTheme/Scripts/Shared/product.js");
	//prepare "Add to cart" AJAX link
	string addtocartlink = "";
	var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
	var quantity = 1;
	if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
	{
		addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
	}
	else
	{
		addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
	}
}

<div data-productid="@Model.Id" class="thumbnail-wrapper">
	<div class="thumbnail">
		<div class="image">
			<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
				<img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
			</a>
		</div>
		<div class="caption">
			<h5>
				<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
					@Model.Name
				</a>
			</h5>

			<ul class="product-spec-list">
				<li>
					<strong>@T("Manufacturers"):</strong>&nbsp;
					<span>@Model.ManufacturerName</span>
				</li>

				@foreach (var spec in Model.SpecificationAttributeModels)
				{
					<li>
						<strong>@spec.SpecificationAttributeName:</strong>&nbsp;<span>@spec.ValueRaw</span>
					</li>
				}
			</ul>

			<div class="row product-short-description">
				<div class="col-md-12">
					@Model.ShortDescription
				</div>
			</div>

			<div class="row">
				<div class="col-md-6">
					@if (!Model.ProductPrice.DisableWishlistButton && Model.WishListModel.ShowWishListButton)
					{
						@Html.Partial("_ButtonAddToWishlist", Model.WishListModel)
					}<span class="price">@Model.ProductPrice.Price</span>
				</div>

				<div class="col-md-6 text-right">
					@if (Model.ShowBuyButton)
					{
						var buyButtonText = (Model.ProductPrice.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"));
						<a href="javascript:void();"
						   type="button"
						   class="btn btn-sm btn-primary"
						   onclick="AjaxCart.addproducttocart_catalog(this, '@addtocartlink');return false;"
						   title="@buyButtonText">
							<i class="fa fa-shopping-cart fa-fw"></i>&nbsp;&nbsp;
							<span>@buyButtonText</span>
						</a>
					}
				</div>
			</div>
		</div>
	</div>
</div>
