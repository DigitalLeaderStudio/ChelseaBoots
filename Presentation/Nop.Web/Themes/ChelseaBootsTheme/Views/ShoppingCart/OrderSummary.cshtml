@model ShoppingCartModel
@using Nop.Core
@using Nop.Core.Infrastructure
@using Nop.Web.Models.ShoppingCart;
@{
	var webHelper = EngineContext.Current.Resolve<IWebHelper>();
}
<div class="order-summary-content">
	@Html.Widget("order_summary_content_before")
	@Html.Partial("_OrderReviewData", Model.OrderReviewData)
	@if (Model.Items.Count > 0)
	{
		if (Model.Warnings.Count > 0)
		{
			<div class="alert alert-danger square-box">
				@for (int i = 0; i < Model.Warnings.Count; i++)
				{
					<div>@Model.Warnings[i]</div>
				}
			</div>
		}

		@*we add enctype = "multipart/form-data" because "File upload" attribute control type requries it*@
		using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data" }))
		{
			@Html.AntiForgeryToken()
			<div class="table-wrapper" style="z-index: 1;">
				<table class="table table-hover">
					<thead>
						<tr>
							<th class="product">
								@T("ShoppingCart.Product(s)")
							</th>
							<th class="quantity">
								@T("ShoppingCart.Quantity")
							</th>
							<th class="text-center">@T("ShoppingCart.UnitPrice")</th>
							<th class="text-center">@T("ShoppingCart.ItemTotal")</th>
							@if (Model.IsEditable)
							{
								<th class="remove-from-cart">
								</th>
							}
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Items)
						{
							var productUrl = Url.RouteUrl("Product", new { SeName = item.ProductSeName });
							var manufacturerUrl = Url.RouteUrl("Manufacturer", new { SeName = item.Manufacturer.SeName });
							<tr product-id="@item.ProductId">
								<td class="col-sm-8 col-md-6">
									<div class="media">
										<a class="thumbnail pull-left" href="@productUrl">
											<img class="media-object"
												 alt="@item.Picture.AlternateText"
												 src="@item.Picture.ImageUrl"
												 title="@item.Picture.Title" />
										</a>
										<div class="media-body">
											<h4 class="media-heading">
												<a href="@productUrl" class="product-name">@item.ProductName</a>
											</h4>
											<p>
												<span>@T("Manufacturers"):</span>&nbsp;
												<strong><a href="@manufacturerUrl">@item.Manufacturer.Name</a></strong>
											</p>
											<div id="attributes-container">
												@if (item.Warnings.Count > 0)
												{
													<div class="alert alert-danger square-box">
														@for (int i = 0; i < item.Warnings.Count; i++)
														{
															<div>@item.Warnings[i]</div>
														}
														<div class="attribute-item">
															@{
														var dataDictAttributes = new ViewDataDictionary();
														dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", item.ProductId);
														@Html.Partial("../Product/_ProductAttributes", item.ProductAttributes, dataDictAttributes)
															}
														</div>
													</div>
												}
												else
												{
													var attrs = item.AttributeInfo.Split(new char[] { ':' });
													<p>
														<span>@attrs[0]</span>
														<strong>@attrs[1]</strong>
													</p>
												}
											</div>
										</div>
									</div>
								</td>
								<td class="col-sm-1 col-md-1 valign-center">
									@Html.TextBoxFor(model => item.Quantity, new { @type = "number", @class = "form-control" })
								</td>
								<td class="col-sm-1 col-md-1 text-center valign-center">
									<strong>@item.UnitPrice</strong>
								</td>
								<td class="col-sm-1 col-md-1 text-center valign-center">
									<strong>@item.SubTotal </strong>
								</td>
								<td class="col-sm-1 col-md-1 valign-center">
									@{
											var removeLink = Url.RouteUrl("RemoveProductFromCart", new { productId = item.ProductId, quantity = item.Quantity, });
											var refreshLink = Url.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable });
									}
									<button type="button"
											class="btn btn-danger"
											onclick="orderSummary.deleteItem(this, '@removeLink', '@refreshLink');return false;">
										<i class="fa fa-trash-o" aria-hidden="true"></i>&nbsp;&nbsp;@T("Common.Remove")
									</button>
								</td>
							</tr>
						}
					</tbody>
				</table>
				<div id="orderTotals">
					@Html.Action("OrderTotals", "ShoppingCart", new { isEditable = Model.IsEditable })
				</div>
				<div class="buttons">
					@if (Model.IsEditable)
					{
						var continueShoppingUrl = string.IsNullOrEmpty(Model.ContinueShoppingUrl) ? Url.RouteUrl("HomePage") : Model.ContinueShoppingUrl;

						<div class="common-buttons">
							<a type="button" href="@continueShoppingUrl" class="btn btn-primary">
								<i class="fa fa-shopping-cart" aria-hidden="true"></i>&nbsp;&nbsp;@T("ShoppingCart.ContinueShopping")
							</a>
							<button class="btn btn-success" type="submit" id="checkout" name="checkout" value="checkout">
								@T("Checkout.Button")&nbsp;&nbsp;<i class="fa fa-credit-card" aria-hidden="true"></i>
							</button>
						</div>
						@*@Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())*@
					}
				</div>
			</div>

			<div class="cart-footer">
				@Html.Widget("order_summary_cart_footer")
				@if (Model.IsEditable)
				{
					if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
					{
						<div>
							<div class="min-amount-warning">
								@Model.MinOrderSubtotalWarning
							</div>
						</div>
					}
				}
			</div>
			if (Model.IsEditable)
			{
				@Html.Action("CrossSellProducts", "Product")
			}
		}
	}
	else
	{
		@T("ShoppingCart.CartIsEmpty")
	}
	@Html.Widget("order_summary_content_after")
</div>
<script type="text/javascript">
	var orderSummary = {
		deleteItem: function (element, removeLink, refreshLink) {
			AjaxCart.removeFromCart(element, removeLink)
			.then(function () {
				$.ajax({
					cache: false,
					url: refreshLink,
					type: 'post',
					success: function (response) {
						$('#orderTotals').html(response);
					}
				});
			});
		}
	}
</script>