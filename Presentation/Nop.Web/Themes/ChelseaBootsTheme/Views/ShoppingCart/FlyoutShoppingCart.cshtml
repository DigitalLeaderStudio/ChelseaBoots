@model MiniShoppingCartModel
@using Nop.Web.Models.ShoppingCart;
<div id="flyout-cart" class="flyout-cart">
	<div class="mini-shopping-cart">
		<div class="count">
			@if (Model.TotalProducts == 0)
			{
				@T("ShoppingCart.Mini.NoItems")
			}
		</div>

		@if (Model.TotalProducts > 0)
		{
			<div class="items ">
				@for (int i = 0; i < Model.Items.Count; i++)
				{
					var item = Model.Items[i];
					<div product-id="@item.ProductId" class="item @(i == 0 ? "first" : null) row">
						@if (Model.ShowProductImages)
						{
							<div class="col-md-5">
								<div class="picture">
									<a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })" title="@item.Picture.Title">
										<img alt="@item.Picture.AlternateText" src="@item.Picture.ImageUrl" title="@item.Picture.Title" />
									</a>
								</div>

							</div>
						}
						<div class="col-md-7">
							<div class="product">
								<div class="name">
									<a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
								</div>
								@{ var removeLink = Url.RouteUrl("RemoveProductFromCart", new { productId = item.ProductId, quantity = item.Quantity, }); }
								<a class="remove-from-cart"
								   href="javascript:void(0);"
								   onclick="AjaxCart.removeFromCart(this, '@removeLink'); return false;">
									<i class="fa fa-trash-o"></i>
								</a>

								<div class="price">
									@T("ShoppingCart.Mini.UnitPrice"): <span>@item.UnitPrice</span>
								</div>

							</div>
						</div>
					</div>
				}
			</div>
			<div class="totals">@T("ShoppingCart.Totals.SubTotal"): <strong>@Model.SubTotal</strong></div>
			<div class="flyout-cart-footer">
				@if (Model.DisplayShoppingCartButton)
				{
					<a href="@Url.RouteUrl("ShoppingCart")">
						<i class="fa fa-shopping-cart"></i>
						@T("ShoppingCart.Mini.ViewCart")
					</a>
				}
				@if (Model.DisplayCheckoutButton)
				{
					var checkoutUrl = "";
					if (Model.AnonymousCheckoutAllowed && Model.CurrentCustomerIsGuest)
					{
						checkoutUrl = Url.RouteUrl("LoginCheckoutAsGuest", new { returnUrl = Url.RouteUrl("ShoppingCart") });
					}
					else
					{
						checkoutUrl = Url.RouteUrl("Checkout");
					}
					<input type="button" value="@T("Checkout.Button")" class="btn btn-default" onclick="setLocation('@checkoutUrl')" />
				}
			</div>
		}
	</div>
</div>
